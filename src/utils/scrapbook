
// {
// name,
// campaign,
// sex,
// race,
// job,
// strAbility,
// conAbility,
// dexAbility,
// intAbility,
// wisAbility,
// chaAbility,
// hairColor,
// hairStlye,
// eyeColor,
// skinColor,
// bodyType,
// background,
// mainWeapon,
// rangedWeapon,
// armor,
// commonLanguage,
// dwarvishLanguage,
// elvishLanguage,
// giantLanguage,
// gnomishLanguage,
// goblinLanguage,
// halflingLanguage,
// orcLanguage,
// abyssalLanguage,
// celestialLanguage,
// draconincLanguage,
// deepSpeechLanguage,
// infernalLanguage,
// primordialLanguage,
// sylvanLanguage,
// undercommonLanguage,
// artisanTools,
// alchemistSupplies,
// brewerSupplies,
// calligrapherSupplies,
// carpenterTools,
// cartographerTools,
// cobblerTools,
// cookTools,
// glassblowerTools,
// thievesTools,
// jewellerTools,
// leatherworkerTools,
// masonTools,
// painterSupplies,
// potterTools,
// smithTools,
// tinkerTools,
// weaverTools,
// woodcarverTools,
// disguiseKit,
// cardSet,
// diceSet, 
// herbalismKit,
// forgeryKit,
// musicalInstrument,
// navigatorTools,
// poisonerKit,
// athletics,
// acrobatics,
// sleightOfHand,
// stealth,
// arcana,
// history,
// investigation,
// nature,
// religion,
// animalHandling,
// insight,
// medicine,
// perception,
// survival,
// persuasion,
// deception,
// intimidation,
// performance,
// cantrip1,
// cantrip2,
// cantrip3,
// cantrip4,
// cantrip5,
// spell1,
// spell2,
// spell3,
// spell4,
// spell5,
// spell6,
// spell7,
// spell8,
// spell9,
// spell10,
// weapon,
// rangedWeapon,
// armor,
// hasShield,
// starterpack,
// currency,
// prompt }

            // <input type="checkbox" name="giantLanguage" onChange={handleCheck} />
            //   <label> Giant </label>
            // <input type="checkbox" name="gnomishLanguage" onChange={handleCheck} />
            //   <label> Gnomish </label>
            // <input type="checkbox" name="goblinLanguage" onChange={handleCheck} />
            //   <label> Goblin </label>
            // <input type="checkbox" name="halflingLanguage" onChange={handleCheck} />
            //   <label> Hafling </label>
            // <input type="checkbox" name="orcLanguage" onChange={handleCheck} />
            //   <label> Orc </label>
            // <input type="checkbox" name="abyssalLanguage" onChange={handleCheck} />
            //   <label> Abyssal </label>
            // <input type="checkbox" name="celestialLanguage" onChange={handleCheck} />
            //   <label> Celestial </label>
            // <input type="checkbox" name="draconicLanguage" onChange={handleCheck} />
            //   <label> Draconic </label>
            // <input type="checkbox" name="deepSpeechLanguage" onChange={handleCheck} />
            //   <label> Deep Speech </label>
            // <input type="checkbox" name="infernalLanguage" onChange={handleCheck} />
            //   <label> Infernal </label>
            // <input type="checkbox" name="primordialLanguage" onChange={handleCheck} />
            //   <label> Primordial </label>
            // <input type="checkbox" name="sylvanLanguage" onChange={handleCheck} />
            //   <label> Sylvan </label>
            // <input type="checkbox" name="undercommonLanguage" onChange={handleCheck} />
            //   <label> Undercommon </label>
            //   <label> Choose your tools: </label>
            // <input type="checkbox" name="artisanTools" onChange={handleCheck} />
            //   <label> Artisan's Tools </label>
            // <input type="checkbox" name="alchemistSupplies" onChange={handleCheck} />
            //   <label> Alchemist's Supplies </label>
            // <input type="checkbox" name="brewerSupplies" onChange={handleCheck}/>
            //   <label> Brewer Supplies </label>
            // <input type="checkbox" name="calligrapherSupplies" onChange={handleCheck} />
            //   <label> Calligrapher's Supplies </label>  
            // <input type="checkbox" name="carpenterTools" onChange={handleCheck} />
            //   <label> Carpenter's Tools </label>
            // <input type="checkbox" name="cartographerTools" onChange={handleCheck} />
            //   <label> Cartographer's Tools </label>
            // <input type="checkbox" name="cobblerTools" onChange={handleCheck} />
            //   <label> Cobbler's Tools </label>
            // <input type="checkbox" name="cookTools" onChange={handleCheck} />
            //   <label> Cook's Tools </label>
            // <input type="checkbox" name="glassblowerTools" onChange={handleCheck} />
            //   <label> Glassblower's Tools </label>
            // <input type="checkbox" name="thievesTools" onChange={handleCheck} />
            //   <label> Thieves' Tools </label>
            // <input type="checkbox" name="jewellerTools" onChange={handleCheck} />
            //   <label> Jeweller's Tools </label>
            // <input type="checkbox" name="leatherworkerTools" onChange={handleCheck} />
            //   <label> Leatherworker's Tools </label>
            // <input type="checkbox" name="masonTools" onChange={handleCheck} />
            //   <label> Mason's Tools </label>
            // <input type="checkbox" name="painterSupplies" onChange={handleCheck} />
            //   <label> Painter's Supplies </label>
            // <input type="checkbox" name="potterTools" onChange={handleCheck} />
            //   <label> Potter's Tools </label>
            // <input type="checkbox" name="smithTools" onChange={handleCheck} />
            //   <label> Smith's Tools </label>
            // <input type="checkbox" name="tinkerTools" onChange={handleCheck} />
            //   <label> Tinker's Tools </label>
            // <input type="checkbox" name="weaverTools" onChange={handleCheck} />
            //   <label> Weaver's Tools </label>
            // <input type="checkbox" name="woodcarverTools" onChange={handleCheck} />
            //   <label> Woodcarver's Tools </label>
            // <input type="checkbox" name="disguiseKit" onChange={handleCheck} />
            //   <label> Disguise Kit </label>
            // <input type="checkbox" name="forgeryKit" onChange={handleCheck} />
            //   <label> Forgery Kit </label>
            // <input type="checkbox" name="diceSet" onChange={handleCheck} />
            //   <label> Dice Set </label>
            // <input type="checkbox" name="cardSet" onChange={handleCheck} />
            //   <label> Playing Cards Set </label>
            // <input type="checkbox" name="herbalismKit" onChange={handleCheck} />
            //   <label> Herbalism Kit </label>
            // <input type="checkbox" name="forgeryKit" onChange={handleCheck} />
            // <label> Forgery Kit </label> 
            //   <input type="checkbox" name="musicalInstrument" onChange={handleCheck} />
            // <label> Musical Instrument </label>
            //   <input type="checkbox" name="navigatorTools" onChange={handleCheck} />
            // <label> Navigator Tools </label>
            //   <input type="checkbox" name="poisonerKit" onChange={handleCheck} />
            // <label> Poisoner Kit </label> 

// const textToImagePrompt = `Photorealistic portrait of a ${character.race} ${character.skinColor}-skinned ${character.sex} ${character.job} dungeons and dragons character that has ${character.eyeColor} eyes, ${character.hairColor} colored hair ${character.hairStlye} styled, wearing ${character.armor} and wielding a ${character.mainWeapon}.`

// generate a photorealistic portrait of a human fair-skinned male barbarian dungeons and dragons character that has brown eyes, brown colored hair in a braided hair style, wearing leather armor and wielding a great axe.



// import MonsterApiClient from "monsterapi"
// import { useEffect } from "react"
// import { token } from "../utils/IMG_API"

  
//   const imgGenerator = () => {
//     const client = new MonsterApiClient(token);
//   }

//   useEffect(() =>{
//     const model = 'sdxl-base';
//     const input = {
//       prompt: textToImagePrompt,
//       negprompt: 'unreal, fake, meme, joke, disfigured, poor quality, bad, ugly',
//       samples: 1,
//       steps: 50,
//       aspect_ratio: 'square',
//       guidance_scale: 7.5,
//       seed: 2414,
//       style: 'cinematic'
//     };
//   })
 
//   // Use the generate function to retrieve the generated content
//   client.generate(model, input)
//     .then((response) => {
//        let image = response  
//       console.log('Generated content:', response);
//     })
//     .catch((error) => {
//       // Handle API errors
//       console.error('Error:', error);
//     });